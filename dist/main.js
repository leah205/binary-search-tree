(()=>{"use strict";const t=class{constructor(t=null){this.data=t,this.left=null,this.right=null}},l=function t(l){if(l.length<=1)return l;let r=Math.ceil(l.length/2),e=t(l.slice(0,r)),n=t(l.slice(r,l.length)),o=[];for(;e.length&&n.length;)o=e[0]<n[0]?o.concat(e.shift()):o.concat(n.shift());return o=o.concat(e),o=o.concat(n),o};function r(t){const l=[];for(let r=0;r<t;r++)l.push(Math.floor(100*Math.random()));return l}const e=new class{constructor(t){this.arr=t,this.#t(t),this.root=this.buildTree(this.arr)}#t(t){return t.reduce(((t,l)=>(t.includes(l)||t.push(l),t)),[])}buildTree(r){const e=l(this.#t(r));return console.log(e),function l(r,e,n){if(e>n)return null;let o=Math.floor((n+e)/2);const i=new t(r[o]);return i.left=l(r,e,o-1),i.right=l(r,o+1,n),i}(e,0,e.length-1)}insert(l){return function r(e){l>e.data?null===e.right?e.right=new t(l):r(e.right):l<e.data&&(null===e.left&&(e.left=new t(l)),r(e.left))}(this.root)}deleteItem(t){const l=(e,n,o)=>{if(t===e.data)if(null===e.left&&null===e.right)n[o]=null;else if(null===e.left)n[o]=e.right;else if(null===e.right)n[o]=e.left;else{const t=r(e.right).data;this.deleteItem(r(e.right).data),e.data=t}t>e.data?null!==e.right&&l(e.right,e,"right"):t<e.data&&null!==e.left&&l(e.left,e,"left")};return l(this.root);function r(t){return null===t.left?t:r(t.left)}}find(t){return function l(r){if(null===r)return null;if(r.data===t)return r;return l(r.left)||l(r.right)}(this.root)}prettyPrint(t,l="",r=!0){null!==t&&(null!==t.right&&this.prettyPrint(t.right,`${l}${r?"│   ":"    "}`,!1),console.log(`${l}${r?"└── ":"┌── "}${t.data}`),null!==t.left&&this.prettyPrint(t.left,`${l}${r?"    ":"   |"}`,!0))}levelOrderLoop(t=(t=>t.data)){const l=[],r=[this.root];for(;r.length;){let e=r.shift();l.push(t(e)),null!==e.left&&r.push(e.left),null!==e.right&&r.push(e.right)}return l}preOrderCallback(t=(t=>t.data)){const l=[];return function r(e){null!==e&&(l.push(t(e)),r(e.left),r(e.right))}(this.root),l}inOrderCallback(t=(t=>t.data)){const l=[];return function r(e){null!==e&&(r(e.left),l.push(t(e)),r(e.right))}(this.root),l}postOrderCallback(t=(t=>t.data)){const l=[];return function r(e){null!==e&&(r(e.left),r(e.right),l.push(t(e)))}(this.root),l}height(t){return function t(l){if(null===l.right&&null===l.left)return 0;{if(null===l.left)return 1+t(l.right);if(null===l.right)return 1+t(l.left);let r=t(l.left),e=t(l.right);return r>e?1+r:1+e}}(t)}depth(t){return this.height(this.root)-this.height(t)}isBalanced(){const t=l=>null===l.left&&null===l.right||(null===l.left||null===l.right?this.height(l)<=1:t(l.left)&&t(l.right));return t(this.root)}rebalance(){this.root=this.buildTree(this.inOrderCallback())}}(r(10));e.prettyPrint(e.root),console.log(e.isBalanced()),e.postOrderCallback().forEach((t=>console.log(t))),r(10).forEach((t=>{e.insert(t)})),e.prettyPrint(e.root),console.log(e.isBalanced()),e.rebalance(),e.prettyPrint(e.root),console.log(e.isBalanced()),e.levelOrderLoop().forEach((t=>console.log(t))),e.prettyPrint(e.root),e.preOrderCallback().forEach((t=>console.log(t))),e.prettyPrint(e.root),e.inOrderCallback().forEach((t=>console.log(t))),e.prettyPrint(e.root),e.postOrderCallback().forEach((t=>console.log(t)))})();